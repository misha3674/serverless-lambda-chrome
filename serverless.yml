service: serverless-lambda-chrome

provider:
  name: aws
  versionFunctions: false
  runtime: nodejs12.x
  region: us-east-1
  stage: dev
  environment:
    IS_OFFLINE: ${opt:offline}
  apiGateway:
    binaryMediaTypes:
      - "application/pdf"
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
        - "s3:PutObject"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - Ref: "AppHtmlPdf"
            - "/*"

plugins:
  - serverless-webpack
  - serverless-offline

layers:
  HeadlessChrome:
    name: HeadlessChrome
    compatibleRuntimes:
      - nodejs12.x
    description: Required for headless chrome
    package:
      artifact: layers/chrome_aws_lambda.zip

custom:
  webpack:
    webpackConfig: webpack.config.js
    includeModules:
      forceExclude:
        - chrome-aws-lambda
    packager: "yarn"

  serverless-offline:
    location: .webpack/service

functions:
  generate-the-pdf:
    provisionedConcurrency: 2
    handler: functions/pdf.generate
    layers:
      - { Ref: HeadlessChromeLambdaLayer }
    events:
      - http:
          path: puppeteer/pdf
          method: post
          cors: true

resources:
  Resources:
    AppHtmlPdf:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: html-pdf-0506-917
        AccessControl: PublicRead
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          IgnorePublicAcls: true
          BlockPublicPolicy: false
          RestrictPublicBuckets: false
